swagger: "2.0"
info:
  title: Record Bin
  description: Record Bin API
  contact:
    email: gui.talarico+recordbin@gmail.com
  license:
    name: MIT
  version: v1
schemes:
  - http
basePath: /api/v1
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  # /path?api_key=abcdef12345
  SourceTokenParam:
    type: apiKey
    in: query
    name: token
    description: "Source Token in request url param: `/records/?token=123`"
  # Header {Authorization: Token 123...}
  SourceTokenHeader:
    type: apiKey
    in: header
    name: Authorization
    description: 'Source Token in request Authorization Header: `{ Authorization: "Token 123"}`'
  # JWT Token
  JwtToken:
    type: apiKey
    in: header
    name: Authorization
    description: 'JWT Token in request Authorization Header: `{ Authorization: "JWT 123"}`'
security:
  - SourceTokenParam: []
  - SourceTokenHeader: []
  - JwtToken: []
paths:
  /records/:
    get:
      operationId: api_v1_records_list
      description: Return a list of records.
      security:
      parameters: []
      responses:
        "200":
          description: ""
          schema:
            type: array
            items:
              $ref: "#/definitions/Record"
      tags:
        - api
    post:
      operationId: api_v1_records_create
      description: Create a new record instance.
      parameters:
        - in: body
          name: record
          description: Record
          schema:
            type: object
      responses:
        "201":
          description: ""
          schema:
            $ref: "#/definitions/Record"
      tags:
        - api
  /sources/:
    get:
      operationId: api_v1_sources_list
      description: Return a list of Record Sources.
      responses:
        "200":
          description: ""
          schema:
            type: array
            items:
              $ref: "#/definitions/Source"
      tags:
        - api
      parameters: []
  /tokens/:
    get:
      operationId: api_v1_tokens_list
      description: Return a list of Record Source Tokens.
      responses:
        "200":
          description: ""
          schema:
            type: array
            items:
              $ref: "#/definitions/SourceToken"
      tags:
        - api
      parameters: []
  /auth/token-new/:
    post:
      operationId: api_v1_auth_token-new_create
      summary: API View that receives a POST with a user's username and password.
      description: Returns a JSON Web Token that can be used for authenticated requests.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: "#/definitions/JSONWebToken"
      responses:
        "201":
          description: ""
          schema:
            $ref: "#/definitions/JSONWebToken"
      tags:
        - api
    parameters: []
  /auth/token-refresh/:
    post:
      operationId: api_v1_auth_token-refresh_create
      summary:
        "API View that returns a refreshed token (with new expiration) based\
        \ on\nexisting token"
      description:
        "If 'orig_iat' field (original issued-at-time) is found, will first\
        \ check\nif it's within expiration window, then copy it to the new token"
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: "#/definitions/RefreshJSONWebToken"
      responses:
        "201":
          description: ""
          schema:
            $ref: "#/definitions/RefreshJSONWebToken"
      tags:
        - api
    parameters: []
  /auth/token-verify/:
    post:
      operationId: api_v1_auth_token-verify_create
      description:
        "API View that checks the veracity of a token, returning the token\
        \ if it\nis valid."
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: "#/definitions/VerifyJSONWebToken"
      responses:
        "201":
          description: ""
          schema:
            $ref: "#/definitions/VerifyJSONWebToken"
      tags:
        - api
    parameters: []
definitions:
  Record:
    required:
      - data
    type: object
    properties:
      id:
        title: Id
        type: string
        format: uuid
        readOnly: true
      created_on:
        title: Created on
        type: string
        format: date-time
        readOnly: true
      data:
        title: Data
        type: string
      source:
        title: Source
        type: string
        readOnly: true
  Source:
    required:
      - name
    type: object
    properties:
      id:
        title: Id
        type: string
        format: uuid
        readOnly: true
      created_on:
        title: Created on
        type: string
        format: date-time
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 200
        minLength: 1
      owner:
        title: Owner
        type: string
        readOnly: true
  SourceToken:
    required:
      - source
    type: object
    properties:
      key:
        title: Key
        type: string
        readOnly: true
        minLength: 1
      created_on:
        title: Created on
        type: string
        format: date-time
        readOnly: true
      source:
        title: Source
        type: string
  JSONWebToken:
    required:
      - username
      - password
    type: object
    properties:
      username:
        title: Username
        type: string
        minLength: 1
      password:
        title: Password
        type: string
        minLength: 1
  RefreshJSONWebToken:
    required:
      - token
    type: object
    properties:
      token:
        title: Token
        type: string
        minLength: 1
  VerifyJSONWebToken:
    required:
      - token
    type: object
    properties:
      token:
        title: Token
        type: string
        minLength: 1
